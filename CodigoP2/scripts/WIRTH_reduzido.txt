PROGRAM         = IMPORTS DECLS_GLOBAIS DEF_PROCS_FUNCS "main" DEF_MAIN.

IMPORTS         = { "<" IDENT ">" } .

DECLS_GLOBAIS   = { "struct" IDENT "{" { [ "const" ] IDENT { "[" INT "]" } IDENT [ "=" EXPR ] { "," IDENT [ "=" EXPR ] } ";" } "}" | [ "const" ] IDENT { "[" INT "]" } IDENT [ "=" EXPR ] { "," IDENT [ "=" EXPR ] } ";" } "meth".

DEF_PROCS_FUNCS = { "void" IDENT LIST_PARAMS "{" { INSTR_SEM_RET } "}" | IDENT { "[" INT "]" } IDENT LIST_PARAMS "{" { INSTR_SEM_RET } "return" EXPR [ ";" ] "}" }.
LIST_PARAMS     = "(" [ [ "ref" ] IDENT { "[" INT "]" } IDENT { "," [ "ref" ] IDENT { "[" INT "]" } IDENT } ] ")".

DEF_MAIN        = "(" ")" "{" { INSTR_SEM_RET } "}".

INSTR_SEM_RET   = IDENT ( "[" ( [ "+" | "-" ] ( "(" EXPR ")" |( INT | FLOAT | IDENT ( "(" [ EXPR { "," EXPR } ] ")" | { "[" EXPR "]" } { "." VARIDENT } )) ) | STR | CHAR | BOOL { "*" | "/" | "%" ATOMO } { ( "+" | "-" ) TERM} "]" { "[" EXPR "]" } { "." VARIDENT } ["+" | "-" | "*" | "/" | "%" ] "=" EXPR { "," VARIDENT OPER_ATRIB EXPR } ";" | INT "]" { "[" INT "]" } IDENT [ "=" EXPR ] { "," IDENT [ "=" EXPR ] } ";" ) | IDENT [ "=" EXPR ] { "," IDENT [ "=" EXPR ] } ";" | { "." VARIDENT } [ "+" | "-" | "*" | "/" | "%"] "=" EXPR { "," VARIDENT OPER_ATRIB EXPR } ";" | "(" [ EXPR { "," EXPR } ] ")" ";" ) | "for" "(" IDENT { "[" INT "]" } IDENT [ "=" EXPR ] { "," IDENT [ "=" EXPR ] } ";" COND ";" VARIDENT OPER_ATRIB EXPR { "," VARIDENT OPER_ATRIB EXPR } ")" "{" { INSTR_SEM_RET } "}" | "while" "(" COND ")" "{" { INSTR_SEM_RET } "}" | "if" "(" COND ")" "{" { INSTR_SEM_RET } "}" ["else" "{" { INSTR_SEM_RET } "}"].

VARIDENT        = IDENT { "[" EXPR "]" } { "." IDENT { "[" EXPR "]" } } .

FUNCTION_CALL   = IDENT "(" [ EXPR { "," EXPR } ] ")".

BOTH = IDENT ( { "[" EXPR "]" } { "." IDENT { "[" EXPR "]" } } | "(" [ EXPR { "," EXPR } ] ")").

COND            = COND_TERM { ("and" | "or") COND_TERM}.
COND_TERM       = "(" COND ")" | ATOMO_COND { ("==" | "!=" | "<=" | ">=") ATOMO_COND}.
ATOMO_COND      = VARIDENT | BOOL | INT | "not" ATOMO_COND.

OPER_ATRIB      =  "+=" | "-=" | "*=" | "/=" | "%=" | "=".

EXPR            = [ "+" | "-" ] TERM { ( "+" | "-" ) TERM } .
TERM            = "(" EXPR ")" | ATOMO { ( "*" | "/" | "%" ) ATOMO } .
ATOMO           = ([ "+" | "-" ] ( BOTH | INT | FLOAT )) | STR | CHAR | BOOL .
